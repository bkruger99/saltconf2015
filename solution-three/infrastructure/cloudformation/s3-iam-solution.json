{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This CloudFormation template instantiates an S3 bucket, SNS, SQS queues, dynamodb tables, IAM roles/profiles and etc.  This ensures that the permanent data storage and transport is available",

  "Parameters" : {

    "BucketName" : {
      "Description" : "Name of a new s3 bucket to create",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "128",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores.",
      "Default" : "saltconf2015-solution-3"
    }

  },

  "Mappings" : {
  },

  "Resources" : {

  "SqsMinion" :
    {
      "Type": "AWS::SQS::Queue",
      "Properties": {
         "DelaySeconds": "0",
         "QueueName": "SqsMinion"
      }
    },
  "SqsMaster" :
    {
      "Type": "AWS::SQS::Queue",
      "Properties": {
         "DelaySeconds": "0",
         "QueueName": "SqsMaster"
      }
    },
  "SqsPolicyMinion":{
      "Type":"AWS::SQS::QueuePolicy",
      "Properties":{        
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Id":"MyQueuePolicy",
          "Statement":[
            {
              "Sid":"Allow-SendMessage-To-Minion-Queue-From-SNS-Topic",
	      "Effect":"Allow",           
	      "Principal":"*",
 	      "Action":["sqs:SendMessage"],
	      "Resource":"*",
              "Condition":{
                "ArnEquals":{
                  "aws:SourceArn":{"Ref":"SnsMinion"}
                }
              }
            }
          ]
        },
        "Queues":[{"Ref":"SqsMinion"}]
      }
  },
  
  "SqsPolicyMaster":{
      "Type":"AWS::SQS::QueuePolicy",
      "Properties":{        
        "PolicyDocument":{
          "Version":"2012-10-17",
          "Id":"MyQueuePolicy",
          "Statement":[
            {
              "Sid":"Allow-SendMessage-To-Master-Queue-From-SNS-Topic",
	      "Effect":"Allow",           
	      "Principal":"*",
 	      "Action":["sqs:SendMessage"],
	      "Resource":"*",
              "Condition":{
                "ArnEquals":{
                  "aws:SourceArn":{"Ref":"SnsMaster"}
                }
              }
            }
          ]
        },
        "Queues":[{"Ref":"SqsMaster"}]
      }
  },

    "SnsMinion" : {
       "Type" : "AWS::SNS::Topic",
       "Properties" : {
          "Subscription" : [
             { "Endpoint" : { "Fn::GetAtt" : ["SqsMinion", "Arn"]}, "Protocol" : "sqs" }
          ],
          "TopicName" : "SnsMinion",
          "DisplayName" : "SnsMinion"
       }
    },
    
    "SnsMaster" : {
       "Type" : "AWS::SNS::Topic",
       "Properties" : {
          "Subscription" : [
             { "Endpoint" : { "Fn::GetAtt" : ["SqsMaster", "Arn"]}, "Protocol" : "sqs" }
          ],
          "TopicName" : "SnsMaster",
          "DisplayName" : "SnsMaster"
       }
    },

   "SaltConf2015Bucket": {
     "Type" : "AWS::S3::Bucket",
     "Properties" : {
       "AccessControl" : "Private",
       "BucketName" : { "Ref" : "BucketName"},
       "Tags" : [ 
                 { "Key" : "Purpose", "Value" :  "SaltConf2015-SolutionThree" }
                ]
      }
    },

  "S3SaltConf2015Role": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "saltconf2015role",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ 
                    {
                    "Effect":"Allow",
                    "Action": ["sqs:*"],
                    "Resource": {"Fn::GetAtt": ["SqsMinion","Arn"] }
                    },
                    {
                    "Effect":"Allow",
                    "Action": ["sqs:*"],
                    "Resource": {"Fn::GetAtt": ["SqsMaster","Arn"] }
                    },
                    {
                    "Effect":"Allow",
                    "Action": ["ec2:DescribeInstances","ec2:DescribeAddresses","ec2:DescribeInstanceStatus","ec2:DescribeNetworkInterfaces","ec2:DescribeTags"],
                    "Resource": "*"
                    },
                    {
                     "Effect": "Allow",
                     "Action": "s3:*",
                     "Resource": ["arn:aws:s3:::saltconf2015-solution-3",
                                  "arn:aws:s3:::saltconf2015-solution-3/*"]
                    },
                    {"Effect": "Allow",
                     "Action": "s3:ListAllMyBuckets",
                     "Resource": "arn:aws:s3:::*"
                    },
                    {
                      "Action": [
                        "ec2:AssociateAddress",
                        "ec2:DisassociateAddress"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                    }
                 ]
               }
               } ]
            }
   },
   "S3SaltConf2015InstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "S3SaltConf2015Role"
            } ]
         }
   },

  "S3GroupPolicy1" : {
    "Type" : "AWS::IAM::Policy",
    "Properties" : {
      "Groups" : [ { "Ref" : "SaltConf2015Group" } ],
      "PolicyName" : "saltconfs3bucketpolicy",
      "PolicyDocument" : {
         "Version" : "2012-10-17",
         "Statement": [ 
          {
            "Effect": "Allow",
            "Action": [ "s3:*" ],
            "Resource": ["arn:aws:s3:::saltconf2015-solution-3", "arn:aws:s3:::saltconf2015-solution-3/*"]
          },
          {"Effect": "Allow",
            "Action": [ "s3:ListAllMyBuckets" ],
            "Resource": "arn:aws:s3:::*"
          }
         ]
      }
   }
  },
  "SaltConf2015Group": {
    "Type" : "AWS::IAM::Group",
    "Properties": {
      "Path": "/"
    }
  },

  "S3SaltConf2015MinionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "saltconf2015minionrole",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ 
                    {
                     "Effect": "Allow",
                     "Action": "s3:*",
                     "Resource": ["arn:aws:s3:::saltconf2015-solution-3",
                                  "arn:aws:s3:::saltconf2015-solution-3/*"]
                    },
                    {"Effect": "Allow",
                     "Action": "s3:ListAllMyBuckets",
                     "Resource": "arn:aws:s3:::*"
                    }
                 ]
               }
               } ]
            }
   },
   "S3SaltConf2015MinionInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "S3SaltConf2015MinionRole"
            } ]
         }
   },

  "S3GroupPolicy3" : {
    "Type" : "AWS::IAM::Policy",
    "Properties" : {
      "Groups" : [ { "Ref" : "SaltConf2015MinionGroup" } ],
      "PolicyName" : "saltconfs3bucketminionpolicy",
      "PolicyDocument" : {
         "Version" : "2012-10-17",
         "Statement": [ 
          {
            "Effect": "Allow",
            "Action": [ "s3:*" ],
            "Resource": ["arn:aws:s3:::saltconf2015-solution-3", "arn:aws:s3:::saltconf2015-solution-3/*"]
          },
          {"Effect": "Allow",
            "Action": [ "s3:ListAllMyBuckets" ],
            "Resource": "arn:aws:s3:::*"
          }
         ]
      }
   }
  },
  "SaltConf2015MinionGroup": {
    "Type" : "AWS::IAM::Group",
    "Properties": {
      "Path": "/"
    }
  },

   "QueuesPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "QueuesPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:*"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SqsMinion",
                    "Arn"
                  ]
                }
              ],
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "S3SaltConf2015Role"
          }
        ]
      }
    }

},
  
  "Outputs" : {
   "S3SaltConf2015Bucket" : {
      "Value" : { "Fn::Join" : [
         "", [ "https://", { "Fn::GetAtt" : [ "SaltConf2015Bucket", "DomainName" ] } ]
      ] },
      "Description" : "Name of S3 bucket for saltconf 2015 solution 2"
   },
   "S3SaltConf2015Role" : {
      "Value" : { "Ref": "S3SaltConf2015Role"},
      "Description" : "Reference name of S3SaltConf2015Role"
   },
   "S3SaltConf2015RoleArn" : {
      "Value" :  {"Fn::GetAtt" : ["S3SaltConf2015Role", "Arn"] },
      "Description" : "AWS ARN of S3SaltConf2015Role"
   },
   "S3SaltConf2015InstanceProfile" : {
      "Value" : { "Ref" : "S3SaltConf2015InstanceProfile"},
      "Description" : "Reference name of S3SaltConf2015InstanceProfile"
   },
   "S3SaltConf2015InstanceArn" : {
      "Value" :  {"Fn::GetAtt" : ["S3SaltConf2015InstanceProfile", "Arn"] },
      "Description" : "AWS ARN of S3SaltConf2015InstanceProfile"
   },
   "S3SaltConf2015MinionInstanceProfile" : {
      "Value" : { "Ref" : "S3SaltConf2015MinionInstanceProfile"},
      "Description" : "Reference name of S3SaltConf2015MinionInstanceProfile"
   },
   "QueueURL" : {
      "Description" : "URL of minion sqs queue",
      "Value" : { "Ref" : "SqsMinion" }
     },
   "QueueARN" : {
      "Description" : "ARN of newly created sqs queue",
      "Value" : { "Fn::GetAtt" : [ "SqsMinion", "Arn"] }
     },
   "QueueURL2" : {
      "Description" : "URL of master sqs queue",
      "Value" : { "Ref" : "SqsMaster" }
     },
   "QueueARN2" : {
      "Description" : "ARN of newly created sqs queue",
      "Value" : { "Fn::GetAtt" : [ "SqsMaster", "Arn"] }
     },
    "MySNSTopicARN":{
      "Value":{"Ref":"SnsMaster"}  
    },
    "MySNSTopicARN":{
      "Value":{"Ref":"SnsMinion"}  
    }
 } 

}
