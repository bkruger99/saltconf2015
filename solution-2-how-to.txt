General Steps:


-----------------
Pre-Reqs:
-----------------
Tested only with ubuntu 14.04 LTS server (and client for laptop awscli)
AWS root account
Create ssh keypair in AWS ec2 consle, download and have accessible private Keyname
Install awscli tools (e.g. pip install awscli)


-----------------
On laptop/desktop
-----------------
clone github repo
git clone git@github.com:wcannon/saltconf2015.git


Set up "permanent" s3 bucket and iam profiles
* Note: bucket name differences will require a slight change in commands below
---------------------------------------------
cd into saltconf2015/cloudformation_templates (from git clone subdir)

** Need to pass in path to template   e.g.  file:///  + full path to template
aws --profile william cloudformation create-stack --region us-east-1 --stack-name saltconf2015-s3-solution-2  --template-body file:////home/wcannon/saltconf2015/saltconf2015/cloudformation_templates/saltconf2015-s3-iam-solution-2.json --capabilities CAPABILITY_IAM

** get output values of cloudformation stack (either in aws cloudformation console, or via aws cli tools)

Set up aws credentials (either with the new user info created in from cloudformation template saltconf_s3_iam.json or another account with permissions)
----------------------
aws configure


cd into saltconf2015/ (parent directory)

Put necessary scripts and resource dirs in new s3 bucket (example for my s3 bucket named saltconf2015bucket)
aws s3 sync --recursive s3_bucket_contents/ s3://saltconf2015bucket

Create vpc and etc. with autoscaling group
---------------------------------------------
** requires the output values of the saltconf_s3_iam stack creation (e.g. InstanceProfile)
aws cloudformation create-stack --region us-west-2 --stack-name saltconf-vpc-singlemaster --template-body file:////home/wcannon/scratch/saltconf2015/cloudformation_templates/saltconf_vpc_singlemaster.json --parameters ParameterKey=KeyName,ParameterValue=autoscaling_test  ParameterKey=BucketName,ParameterValue=saltconf2015bucket ParameterKey=Region,ParameterValue=us-west-2 ParameterKey=SSHFrom,ParameterValue=50.137.210.143/32 ParameterKey=InstanceType,ParameterValue=m3.medium ParameterKey=InstanceProfile,ParameterValue=saltconf-s3-iam-S3SaltConf2015InstanceProfile-A1OO1PV80X44  

While the instance spins up, and before it switches to using the elastic ip the bootstrap process can be watched:
tail -f /var/log/cloud-init-output.log 

When lines occur (like below) the ec2 instance has associated itself with an elastic ip address:
{
    "AssociationId": "eipassoc-1c506a79"
}


TO DO Next:

** Work completely separately using another account
1.  bucket name / folder / must be set in master bootstrap for sync'ing the master and minion keys

2.  salt master key push up to s3 if not there
    salt master - pull down minion keys from s3
3.  salt reactor for saving minion keys to s3 on key acceptance
4.  add cname auto update to cloudformation - to make it easy for minions to find saltmaster
5.  remove password from user creation in s3_iam cloudformation template - pass it in as a ParameterKey
6.  run of highstate after accepting any key
7.  easy way to assign grains to new servers



# Create Stack Examples
---------------------------
---------------------------
aws --profile william cloudformation create-stack --region us-east-1 --stack-name saltconf2015-s3-solution-2  --template-body file:////home/wcannon/saltconf2015/saltconf2015/cloudformation_templates/saltconf2015-s3-iam-solution-2.json --capabilities CAPABILITY_IAM

aws --profile william cloudformation create-stack --region us-east-1 --stack-name saltconf2015-vpc-solution-2 --template-body file:////home/wcannon/saltconf2015/saltconf2015/cloudformation_templates/saltconf2015-vpc-solution-2.json --parameters ParameterKey=KeyName,ParameterValue=saltconf2015  ParameterKey=BucketName,ParameterValue=saltconf2015-solution-2 ParameterKey=Region,ParameterValue=us-east-1 ParameterKey=SSHFrom,ParameterValue=75.168.164.12/32 ParameterKey=InstanceType,ParameterValue=t2.small 

# Update Stack Examples
---------------------------
---------------------------
aws --profile william cloudformation update-stack --region us-east-1 --stack-name saltconf2015-s3-solution-2  --template-body file:////home/wcannon/saltconf2015/saltconf2015/cloudformation_templates/saltconf2015-s3-iam-solution-2.json --capabilities CAPABILITY_IAM

aws --profile william cloudformation update-stack --region us-east-1 --stack-name saltconf2015-vpc-solution-2 --template-body file:////home/wcannon/saltconf2015/saltconf2015/cloudformation_templates/saltconf2015-vpc-solution-2.json --parameters ParameterKey=KeyName,ParameterValue=saltconf2015  ParameterKey=BucketName,ParameterValue=saltconf2015-solution-2 ParameterKey=Region,ParameterValue=us-east-1 ParameterKey=SSHFrom,ParameterValue=75.168.164.12/32 ParameterKey=InstanceType,ParameterValue=t2.small 

# Update bucket Example:
---------------------------
---------------------------
aws --profile william s3 sync --recursive /home/wcannon/saltconf2015/saltconf2015/s3_bucket_contents_solution_2/ s3://saltconf2015-solution-2
aws --profile william s3 sync --recursive /Users/wcannon/SaltConf2015/saltconf2015/s3_bucket_contents_solution_2/ s3://saltconf2015-solution-2
